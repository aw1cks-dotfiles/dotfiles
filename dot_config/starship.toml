format = '$all'
scan_timeout = 30
command_timeout = 500
add_newline = false

[aws]
format = ' ($symbol([($profile )]($style).)[($region)]($style)(.[($duration)]($style))) '
symbol = '☁️ '
style = 'bold yellow'
disabled = false
expiration_symbol = 'X'

[aws.region_aliases]
eu-west-1 = "euw1"
eu-west-2 = "euw2"

[battery]
full_symbol = ' '
charging_symbol = ' '
discharging_symbol = ' '
unknown_symbol = ' '
empty_symbol = ' '
disabled = false
format = '\[[$symbol$percentage]($style)\]'

[[battery.display]]
threshold = 15
style = 'bold red'

[[battery.display]]
threshold = 25
style = 'bold yellow'

[character]
format = '$symbol '
success_symbol = '[»](purple)'
error_symbol = '[»](red bold)'
vicmd_symbol = '[❮](bold green)'
disabled = false

[cmake]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '△ '
style = 'bold blue'
disabled = true
detect_extensions = []
detect_files = [
    'CMakeLists.txt',
    'CMakeCache.txt',
]
detect_folders = []

[cmd_duration]
min_time = 2000
format = ' [$duration]($style)'
style = 'yellow bold'
show_milliseconds = false
disabled = true
show_notifications = false
min_time_to_notify = 45000

[conda]
truncation_length = 1
format = '(\[[$symbol$environment]($style)\])'
symbol = '🅒 '
style = 'green bold'
ignore_base = true
disabled = false

[crystal]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🔮 '
style = 'bold red'
disabled = false
detect_extensions = ['cr']
detect_files = ['shard.yml']
detect_folders = []

[dart]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🎯 '
style = 'bold blue'
disabled = false
detect_extensions = ['dart']
detect_files = [
    'pubspec.yaml',
    'pubspec.yml',
    'pubspec.lock',
]
detect_folders = ['.dart_tool']

[deno]
format = '([$symbol$version]($style))'
version_format = 'v${raw}'
symbol = '🦕 '
style = 'green bold'
disabled = false
detect_extensions = []
detect_files = [
    'mod.ts',
    'deps.ts',
    'mod.js',
    'deps.js',
]
detect_folders = []

[directory]
truncation_length = 3
truncate_to_repo = false
fish_style_pwd_dir_length = 0
use_logical_path = true
format = '[$path]($style)'
style = '37'
disabled = false
read_only = '🔒'
read_only_style = 'red'
truncation_symbol = 'ﬔ/'
home_symbol = '~'

[directory.substitutions]

[docker_context]
symbol = '🐳 '
style = 'blue bold'
format = '(\[[$symbol$context]($style)\])'
only_with_files = true
disabled = false
detect_extensions = []
detect_files = [
    'docker-compose.yml',
    'docker-compose.yaml',
    'Dockerfile',
]
detect_folders = []

[dotnet]
format = '(\[[$symbol$version (🎯 $tfm )]($style)\])'
version_format = 'v${raw}'
symbol = '.NET '
style = 'blue bold'
heuristic = true
disabled = false
detect_extensions = [
    'csproj',
    'fsproj',
    'xproj',
]
detect_files = [
    'global.json',
    'project.json',
    'Directory.Build.props',
    'Directory.Build.targets',
    'Packages.props',
]
detect_folders = []

[elixir]
format = '(\[[$symbol$version \(OTP $otp_version\)]($style)\])'
version_format = 'v${raw}'
symbol = '💧 '
style = 'bold purple'
disabled = false
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []

[elm]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🌳 '
style = 'cyan bold'
disabled = false
detect_extensions = ['elm']
detect_files = [
    'elm.json',
    'elm-package.json',
    '.elm-version',
]
detect_folders = ['elm-stuff']

[env_var]

[erlang]
format = '(\[[$symbol($version )]($style)\])'
version_format = 'v${raw}'
symbol = ' '
style = 'bold red'
disabled = false
detect_extensions = []
detect_files = [
    'rebar.config',
    'erlang.mk',
]
detect_folders = []

[gcloud]
format = ' ($symbol([($account)(@$domain)]($style))[.($region)]($style)) '
symbol = '☁️ '
style = 'bold blue'
disabled = false

[gcloud.region_aliases]

[git_branch]
format = '[\($symbol](white)[$branch]($style)[\)](white)'
symbol = ' '
style = '26 bold'
truncation_length = 9223372036854775807
truncation_symbol = '…'
only_attached = false
always_show_remote = false
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = 'green bold'
only_detached = true
disabled = false
tag_symbol = ' 🏷  '
tag_disabled = true

[git_metrics]
added_style = 'bold green'
deleted_style = 'bold red'
format = '[+$added]($added_style) [-$deleted]($deleted_style) '
disabled = true

[git_state]
rebase = 'Rebasing'
merge = 'Merging'
revert = 'Reverting'
cherry_pick = 'Cherry-picking'
bisect = 'Bisecting'
am = 'Am'
am_or_rebase = 'Am/Rebase'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'
style = '158 bold'
stashed = '\$'
ahead = '⇡'
behind = '⇣'
up_to_date = ''
diverged = '⇕'
conflicted = '='
deleted = '✘'
renamed = '»'
modified = '!'
staged = '+'
untracked = '?'
disabled = false

[golang]
format = '(\[[${symbol}${version}]($style)\])'
version_format = 'v${raw}'
symbol = '🐹 '
style = 'cyan'
disabled = false
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']

[helm]
format = '([\[](white)[${symbol}${version}]($style)[\]](white))'
version_format = 'v${raw}'
symbol = '⎈ '
style = 'bold white'
disabled = false
detect_extensions = []
detect_files = [
    'helmfile.yaml',
    'Chart.yaml',
]
detect_folders = []

[hg_branch]
symbol = ' '
style = 'bold purple'
format = 'on [$symbol$branch]($style) '
truncation_length = 9223372036854775807
truncation_symbol = '…'
disabled = true

[hostname]
ssh_only = true
trim_at = '.'
format = '[$hostname](cyan)[::](yellow bold)'
style = 'green dimmed bold'
disabled = false

[java]
disabled = false
format = '(\[[${symbol}${version}]($style)\])'
version_format = 'v${raw}'
style = 'red dimmed'
symbol = '☕'
detect_extensions = [
    'java',
    'class',
    'jar',
    'gradle',
    'clj',
    'cljc',
]
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
]
detect_folders = []

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = '[$symbol$number]($style) '
symbol = '✦'
style = 'bold blue'
disabled = false

[julia]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = 'ஃ '
style = 'bold purple'
disabled = false
detect_extensions = ['jl']
detect_files = [
    'Project.toml',
    'Manifest.toml',
]
detect_folders = []

[kotlin]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🅺 '
style = 'bold blue'
kotlin_binary = 'kotlin'
disabled = false
detect_extensions = [
    'kt',
    'kts',
]
detect_files = []
detect_folders = []

[kubernetes]
symbol = '☸ '
format = '\[$symbol([$namespace](#769c7f).)[$context](#769c7f)\]'
style = 'cyan bold'
disabled = false

[kubernetes.context_aliases]

[line_break]
disabled = true

[lua]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🌙 '
style = 'bold blue'
lua_binary = 'lua'
disabled = false
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']

[memory_usage]
threshold = 75
format = '\{$symbol[$ram( | $swap)]($style)\}'
style = 'white bold dimmed'
symbol = '🐏 '
disabled = true

[nim]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '👑 '
style = 'yellow bold'
disabled = false
detect_extensions = [
    'nim',
    'nims',
    'nimble',
]
detect_files = ['nim.cfg']
detect_folders = []

[nix_shell]
format = '(\[[$symbol$state( \($name\))]($style)\])'
symbol = '❄️  '
style = 'bold blue'
impure_msg = 'impure'
pure_msg = 'pure'
disabled = false

[nodejs]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = ' '
style = 'bold green'
disabled = false
not_capable_style = 'bold red'
detect_extensions = [
    'js',
    'mjs',
    'cjs',
    'ts',
]
detect_files = [
    'package.json',
    '.node-version',
    '.nvmrc',
]
detect_folders = ['node_modules']

[ocaml]
format = '(\[[$symbol$version(\($switch_indicator$switch_name\) )]($style)\])'
version_format = 'v${raw}'
global_switch_indicator = ''
local_switch_indicator = '*'
symbol = '🐫 '
style = 'bold yellow'
disabled = false
detect_extensions = [
    'opam',
    'ml',
    'mli',
    're',
    'rei',
]
detect_files = [
    'dune',
    'dune-project',
    'jbuild',
    'jbuild-ignore',
    '.merlin',
]
detect_folders = [
    '_opam',
    'esy.lock',
]

[openstack]
format = '(\[[$symbol$cloud(\($project\))]($style)\])'
symbol = '☁️  '
style = 'bold yellow'
disabled = false

[package]
format = '([\[](white)[${symbol}(${version})]($style)[\]](white))'
symbol = '📦 '
style = '208 bold'
display_private = false
disabled = false
version_format = 'v${raw}'

[perl]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🐪 '
style = '149 bold'
disabled = false
detect_extensions = [
    'pl',
    'pm',
    'pod',
]
detect_files = [
    'Makefile.PL',
    'Build.PL',
    'cpanfile',
    'cpanfile.snapshot',
    'META.json',
    'META.yml',
    '.perl-version',
]
detect_folders = []

[php]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🐘 '
style = '147 bold'
disabled = false
detect_extensions = ['php']
detect_files = [
    'composer.json',
    '.php-version',
]
detect_folders = []

[purescript]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '<=> '
style = 'bold white'
disabled = false
detect_extensions = ['purs']
detect_files = ['spago.dhall']
detect_folders = []

[python]
pyenv_version_name = false
pyenv_prefix = 'pyenv '
python_binary = [
    'python',
    'python3',
    'python2',
]
format = '([\[](white)[${symbol}${pyenv_prefix}${version} (\($virtualenv\))]($style)[\]](white))'
version_format = 'v${raw}'
style = 'yellow'
symbol = '🐍 '
disabled = false
detect_extensions = ['py']
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []

[red]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🔺 '
style = 'red bold'
disabled = false
detect_extensions = [
    'red',
    'reds',
]
detect_files = []
detect_folders = []

[rlang]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
style = 'blue bold'
symbol = '📐 '
disabled = false
detect_extensions = [
    'R',
    'Rd',
    'Rmd',
    'Rproj',
    'Rsx',
]
detect_files = ['.Rprofile']
detect_folders = ['.Rproj.user']

[ruby]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '💎 '
style = 'bold red'
disabled = false
detect_extensions = ['rb']
detect_files = [
    'Gemfile',
    '.ruby-version',
]
detect_folders = []

[rust]
format = '(\[[${symbol}${version}]($style)\])'
version_format = 'v${raw}'
symbol = '🦀 '
style = 'bold red'
disabled = false
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []

[scala]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
disabled = false
style = 'red bold'
symbol = '🆂 '
detect_extensions = [
    'sbt',
    'scala',
]
detect_files = [
    '.scalaenv',
    '.sbtenv',
    'build.sbt',
]
detect_folders = ['.metals']

[shell]
format = '$indicator '
bash_indicator = 'bsh'
fish_indicator = 'fsh'
zsh_indicator = 'zsh'
powershell_indicator = 'psh'
ion_indicator = 'ion'
elvish_indicator = 'esh'
tcsh_indicator = 'tsh'
nu_indicator = 'nu'
xonsh_indicator = 'xsh'
unknown_indicator = ''
disabled = true

[shlvl]
threshold = 2
format = '[$symbol$shlvl]($style) '
symbol = '↕️  '
repeat = false
style = 'bold yellow'
disabled = true

[singularity]
symbol = ''
format = '[$symbol\[$env\]]($style) '
style = 'blue bold dimmed'
disabled = false

[status]
format = '[$symbol$status]($style) '
symbol = '✖'
success_symbol = '✔️'
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
sigint_symbol = '🧱'
signal_symbol = '⚡'
style = 'bold red'
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = '|'
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[swift]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = '🐦 '
style = 'bold 202'
disabled = false
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []

[terraform]
format = '[$symbol]($style)'
version_format = 'v${raw}'
symbol = '💠 '
style = 'bold 105'
disabled = false
detect_extensions = [
    'tf',
    'hcl',
]
detect_files = []
detect_folders = ['.terraform']

[time]
format = 'at [$time]($style) '
style = 'bold yellow'
use_12hr = false
disabled = true
utc_time_offset = 'local'
time_range = '-'

[username]
format = '[$user]($style)[@](bold)'
style_root = 'red'
style_user = '150'
show_always = false
disabled = false

[vagrant]
format = '(\[[$symbol$version]($style)\])'
version_format = ' ${major}.${minor}'
symbol = '⍱'
style = 'blue bold'
disabled = false
detect_extensions = []
detect_files = ['Vagrantfile']
detect_folders = []

[vcsh]
symbol = ''
style = 'bold yellow'
format = 'vcsh [$symbol$repo]($style) '
disabled = false

[vlang]
format = '(\[[$symbol$version]($style)\])'
version_format = 'v${raw}'
symbol = 'V '
style = 'blue bold'
disabled = false
detect_extensions = ['v']
detect_files = [
    'v.mod',
    'vpkg.json',
    '.vpkg-lock.json',
]
detect_folders = []

[zig]
format = '(\[[$symbol($version )]($style)\])'
version_format = 'v${raw}'
symbol = '↯ '
style = 'bold yellow'
disabled = false
detect_extensions = ['zig']
detect_files = []
detect_folders = []
